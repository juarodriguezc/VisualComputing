<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://juarodriguezc.github.io/VisualComputing/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://juarodriguezc.github.io/VisualComputing/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://juarodriguezc.github.io/VisualComputing/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://juarodriguezc.github.io/VisualComputing/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://juarodriguezc.github.io/VisualComputing/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://juarodriguezc.github.io/VisualComputing/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://juarodriguezc.github.io/VisualComputing/docs/workshops/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/docs/workshops/masking/</guid><description>Visual masking # Incluir teoría acerca de visual masking
Image kernels # Teoría # Aplicación # Masking //Global variables //Bar variables let barWidth = 65, barHeight = 22; let dir = false, moveR = true, showBars = true, showGuide = false; let speedR = 5; let xPos = 0, yPos = 180, yDif = 100; let barsFoot = 4; //Color selector let colorOptions = [&amp;#39;blue-yellow&amp;#39;, &amp;#39;red-green&amp;#39;, &amp;#39;grey&amp;#39;]; let colorOptionsInv = { &amp;#39;blue-yellow&amp;#39;:0, &amp;#39;red-green&amp;#39;:1, &amp;#39;grey&amp;#39;:2 } let colors = [[&amp;#34;#000099&amp;#34;,&amp;#34;#F2F200&amp;#34;],[&amp;#34;#4C0000&amp;#34;,&amp;#34;#00E500&amp;#34;],[&amp;#34;#000000&amp;#34;,&amp;#34;#FFF&amp;#34;]] let barColors = [[&amp;#34;#000&amp;#34;,&amp;#34;#FFF&amp;#34;],[&amp;#34;#333&amp;#34;,&amp;#34;#CCC&amp;#34;],[&amp;#34;#000&amp;#34;,&amp;#34;#FFF&amp;#34;]] //Menu variables let menuWidth = 130; let selColor; let colorSelected = 0; let sliderBars; let sliderSpeed; let chbMove; let chbBars; let chbGuide; function setup() { frameRate(60); createCanvas(705, 475); //Create the color selector selColor = createSelect(); for(var option in colorOptions) selColor.</description></item><item><title/><link>https://juarodriguezc.github.io/VisualComputing/docs/workshops/optical_illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://juarodriguezc.github.io/VisualComputing/docs/workshops/optical_illusions/</guid><description>Illusiones ópticas # Incluir teoría acerca de las ilusiones opticas
Stepping feet Motion Illusion # Stepping feet //Global variables //Bar variables let barWidth = 65, barHeight = 22; let dir = false, moveR = true, showBars = true, showGuide = false; let speedR = 5; let xPos = 0, yPos = 180, yDif = 100; let barsFoot = 4; //Color selector let colorOptions = [&amp;#39;blue-yellow&amp;#39;, &amp;#39;red-green&amp;#39;, &amp;#39;grey&amp;#39;]; let colorOptionsInv = { &amp;#39;blue-yellow&amp;#39;:0, &amp;#39;red-green&amp;#39;:1, &amp;#39;grey&amp;#39;:2 } let colors = [[&amp;#34;#000099&amp;#34;,&amp;#34;#F2F200&amp;#34;],[&amp;#34;#4C0000&amp;#34;,&amp;#34;#00E500&amp;#34;],[&amp;#34;#000000&amp;#34;,&amp;#34;#FFF&amp;#34;]] let barColors = [[&amp;#34;#000&amp;#34;,&amp;#34;#FFF&amp;#34;],[&amp;#34;#333&amp;#34;,&amp;#34;#CCC&amp;#34;],[&amp;#34;#000&amp;#34;,&amp;#34;#FFF&amp;#34;]] //Menu variables let menuWidth = 130; let selColor; let colorSelected = 0; let sliderBars; let sliderSpeed; let chbMove; let chbBars; let chbGuide; function setup() { frameRate(60); createCanvas(705, 475); //Create the color selector selColor = createSelect(); for(var option in colorOptions) selColor.</description></item></channel></rss>